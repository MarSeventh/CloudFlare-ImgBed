{"version":3,"file":"js/697.8226f141.js","mappings":"8LACA,MAAMA,EAAa,CACjBC,MAAO,sBACPC,IAAK,aAEDC,EAAa,CACjBF,MAAO,kBAEHG,EAAa,CAAC,MAAO,MAAO,UAC5BC,EAAa,CACjBC,IAAK,EACLL,MAAO,gBAEF,SAASM,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,OAAO,WAAc,QAAoB,MAAOb,EAAY,EAAC,QAAoB,MAAOG,EAAY,GAAE,SAAW,IAAO,QAAoB,KAAW,MAAM,QAAYS,EAAME,QAAQ,CAACC,EAAOC,MACtL,WAAc,QAAoB,MAAO,CAC9CV,IAAKU,EACLf,MAAO,aACPgB,OAAO,QAAgB,CACrBC,KAASH,EAAMI,OAASP,EAAMQ,YAAxB,KACNC,IAAK,GAAGN,EAAMM,QACdC,MAAO,GAAGV,EAAMQ,gBAChBG,OAAQ,GAAGR,EAAMQ,cAElB,EAAC,QAAoB,MAAO,CAC7BC,IAAKT,EAAMU,IACXC,IAAK,SAAWV,EAChBW,QAAS,OACTC,OAAQC,GAAUhB,EAASiB,kBAAkBf,EAAOC,IACnD,KAAM,GAAIZ,IAAc,MACzB,QAASQ,EAAMe,UAAW,WAAc,QAAoB,IAAKtB,EAAY,YAAa,QAAoB,IAAI,IAAQ,IAChI,C,qBC7BA,GACE,IAAA0B,GACE,MAAO,CACLjB,OAAQ,GACRkB,SAAU,IACVC,YAAa,EACbb,YAAa,EACbc,QAAS,GAETP,SAAS,EACTQ,SAAU,KACVC,cAAe,KAEnB,EACA,OAAAC,GACEC,KAAKC,WAAU,KACbD,KAAKE,oBACLC,OAAOC,iBAAiB,SAAUJ,KAAKK,SAAS,IAElDL,KAAKM,aACLN,KAAKO,cACP,EACAC,SAAU,KACL,QAAW,CAAC,cAAe,mBAAoB,gBAEpD,aAAAC,GACMT,KAAKH,UAAUG,KAAKH,SAASa,aACjCP,OAAOQ,oBAAoB,SAAUX,KAAKK,SAC5C,EACAO,QAAS,CAEP,QAAAP,GACEQ,aAAab,KAAKF,eAClBE,KAAKF,cAAgBgB,YAAW,KAC9Bd,KAAKE,mBAAmB,GACvB,IACL,EAEA,YAAAK,GACOP,KAAKH,WACRG,KAAKH,SAAW,IAAIkB,sBAAqBC,IACnCA,EAAQ,IAAIC,gBACdjB,KAAKM,YACP,GACC,CACDY,UAAW,KAEblB,KAAKmB,uBAET,EAEA,iBAAAjB,GACE,IAAKF,KAAKoB,OAAOC,UAAW,OAC5B,MAAMC,EAAiBtB,KAAKoB,MAAMC,UAAUE,YAC5CvB,KAAKL,YAAc6B,KAAKC,IAAI,EAAGD,KAAKE,MAAMJ,EAAiBtB,KAAKN,WAChEM,KAAKlB,YAAcwC,EAAiBtB,KAAKL,YAGzCK,KAAKJ,QAAU,IAAI+B,MAAM3B,KAAKL,aAAaiC,KAAK,GAChD5B,KAAK6B,cACP,EAEA,kBAAMA,GACJ,IAAK7B,KAAKxB,OAAOsD,OAAQ,OAGzB,MAAMC,EAAa,IAAIJ,MAAM3B,KAAKL,aAAaiC,KAAK,GAG9CI,EAAgBhC,KAAKxB,OAAOyD,KAAIxD,IACpC,MAAMyD,EAASlC,KAAKmC,kBAAkBJ,GAItC,OAHAtD,EAAMI,OAASqD,EACfzD,EAAMM,IAAMgD,EAAWG,GACvBH,EAAWG,IAAWzD,EAAMQ,OACrBR,CAAK,IAEduB,KAAKJ,QAAUmC,EACf/B,KAAKxB,OAASwD,CAChB,EAEA,iBAAAG,CAAkBvC,GAChB,OAAOA,EAAQwC,QAAQZ,KAAKa,OAAOzC,GACrC,EACA,oBAAAuB,GACEnB,KAAKC,WAAU,KACb,MAAMqC,EAAStC,KAAKuC,wBAChBD,GACFtC,KAAKH,SAAS2C,QAAQF,EACxB,GAEJ,EACA,qBAAAC,GACE,MAAME,EAAazC,KAAK0C,IAAIC,iBAAiB,eACvCC,EAAe5C,KAAKL,YACpBkD,EAAarB,KAAKC,IAAI,EAAGgB,EAAWX,OAAwB,EAAfc,GAC7CE,EAAsBnB,MAAMoB,KAAKN,GAAYO,MAAMH,EAAYA,EAAaD,GAClF,OAAOE,EAAoBA,EAAoBhB,OAAS,IAAM,IAChE,EAEA,gBAAMxB,GAEJ,GADA2C,QAAQC,IAAI,QACRlD,KAAKX,QAAT,CACAW,KAAKX,SAAU,EACU,IAArBW,KAAKlB,aACPkB,KAAKE,oBAEP,IACE,MAAMiD,QAAgBnD,KAAKoD,cAAc,oBAAqB,CAC5DC,OAAQ,QACPC,MAAKC,GAAYA,EAASC,SAAQF,MAAKG,IACxC,GAAc,QAAVA,GAA8B,yBAAVA,EACtB,OAAOzD,KAAKoD,cAAc,0BAA0BpD,KAAKxB,OAAOsD,8BAA+B,CAC7FuB,OAAQ,QAGV,MAAM,IAAIK,MAAM,eAClB,IACCJ,MAAKC,GAAYA,EAASI,SACvBC,QAAkBC,QAAQC,IAAIX,EAAQlB,KAAI8B,UAC9C,IAAIC,EAAiB,EACjB7E,EAAM,SAAW8E,EAAEC,KACvB,GAAID,EAAEhF,QAAUgF,EAAEjF,MAAO,CACvB,MAAMmF,EAAcF,EAAEhF,OAASgF,EAAEjF,MACjCgF,EAAiBhE,KAAKlB,YAAcqF,CACtC,KAAO,CACL,IAAI,OACFlF,EAAM,MACND,SACQgB,KAAKoE,cAAcjF,GAC7B,MAAMgF,EAAclF,EAASD,EAC7BgF,EAAiBhE,KAAKlB,YAAcqF,CACtC,CAUA,MAT4B,gBAAxBF,EAAEI,UAAUC,QACdL,EAAEM,WAAa,KACkB,iBAAxBN,EAAEI,UAAUC,QACrBL,EAAEM,WAAa,KACkB,OAAxBN,EAAEI,UAAUC,QACrBL,EAAEM,WAAa,KAEfN,EAAEM,WAAa,KAEV,CACLpF,IAAKA,EACLF,OAAQ+E,EACRnF,OAAQ,EACRE,IAAK,EACLwF,WAAYN,EAAEM,WACf,KAEHvE,KAAKxB,OAAOgG,QAAQZ,SACd5D,KAAK6B,cACb,CAAE,MAAO4C,GACPxB,QAAQyB,MAAMD,GACM,iBAAhBA,EAAIE,SACN3E,KAAK4E,SAASF,MAAM,kBAExB,CAAE,QACA1E,KAAKX,SAAU,EACfW,KAAKmB,sBACP,CA1DwB,CA2D1B,EAEA,iBAAA3B,CAAkBf,EAAOC,GACvBsB,KAAKC,WAAU,KACb,MAAM4E,EAAa7E,KAAK0C,IAAIC,iBAAiB,mBAAmBjE,GAC5DmG,IACFpG,EAAMQ,OAAS4F,EAAWC,aACrB9E,KAAK+E,gBACR/E,KAAK+E,eAAgB,EACrBC,uBAAsB,KACpBhF,KAAK6B,eACL7B,KAAK+E,eAAgB,CAAK,KAGhC,GAEJ,EACA,aAAAX,CAAcjF,GACZ,OAAO,IAAI0E,SAAQ,CAACoB,EAASC,KAC3B,MAAMC,EAAM,IAAIC,MAChBD,EAAIE,OAAS,KACXJ,EAAQ,CACNjG,MAAOmG,EAAInG,MACXC,OAAQkG,EAAIlG,QACZ,EAEJkG,EAAIG,QAAUJ,EACdC,EAAIjG,IAAMC,CAAG,GAEjB,EACA,mBAAMiE,CAAcjE,EAAKoG,EAAU,CAAC,GAC9BvF,KAAKwF,cACPD,EAAQE,QAAU,IACbF,EAAQE,QACX,cAAiB,SAASzF,KAAKwF,eAEjCD,EAAQC,YAAc,WAExB,MAAMjC,QAAiBmC,MAAMvG,EAAKoG,GAClC,GAAwB,MAApBhC,EAASoC,OAGX,MAFA3F,KAAK4E,SAASF,MAAM,gBACpB1E,KAAK4F,QAAQpB,KAAK,eACZ,IAAId,MAAM,gBAElB,OAAOH,CACT,I,UCxMJ,MAAMsC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS5H,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://sanyue_imghub/./src/views/fallImg.vue?2fe8","webpack://sanyue_imghub/./src/views/fallImg.vue","webpack://sanyue_imghub/./src/views/fallImg.vue?55c6"],"sourcesContent":["import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"waterfall-container\",\n  ref: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"waterfall-grid\"\n};\nconst _hoisted_3 = [\"src\", \"alt\", \"onLoad\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (image, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"image-item\",\n      style: _normalizeStyle({\n        left: `${image.column * $data.columnWidth}px`,\n        top: `${image.top}px`,\n        width: `${$data.columnWidth}px`,\n        height: `${image.height}px`\n      })\n    }, [_createElementVNode(\"img\", {\n      src: image.url,\n      alt: 'Image ' + index,\n      loading: \"lazy\",\n      onLoad: $event => $options.updateImageHeight(image, index)\n    }, null, 40, _hoisted_3)], 4);\n  }), 128))]), $data.loading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"加载中...\")) : _createCommentVNode(\"\", true)], 512);\n}","import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      images: [],\n      minWidth: 250,\n      columnCount: 3,\n      columnWidth: 0,\n      columns: [],\n      // 存放每列当前累积的高度\n      loading: false,\n      observer: null,\n      resizeTimeout: null\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.updateColumnCount();\n      window.addEventListener(\"resize\", this.onResize);\n    });\n    this.loadImages();\n    this.initObserver();\n  },\n  computed: {\n    ...mapGetters(['credentials', 'adminUrlSettings', 'userConfig'])\n  },\n  beforeDestroy() {\n    if (this.observer) this.observer.disconnect();\n    window.removeEventListener(\"resize\", this.onResize);\n  },\n  methods: {\n    // 监听窗口大小变化\n    onResize() {\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = setTimeout(() => {\n        this.updateColumnCount();\n      }, 300); // 延迟 300ms 避免频繁触发\n    },\n    // 初始化 IntersectionObserver 监听滚动\n    initObserver() {\n      if (!this.observer) {\n        this.observer = new IntersectionObserver(entries => {\n          if (entries[0]?.isIntersecting) {\n            this.loadImages();\n          }\n        }, {\n          threshold: 0.5\n        });\n        this.observeSecondLastRow();\n      }\n    },\n    // 计算列数，并重新布局\n    updateColumnCount() {\n      if (!this.$refs?.container) return;\n      const containerWidth = this.$refs.container.clientWidth;\n      this.columnCount = Math.max(1, Math.floor(containerWidth / this.minWidth));\n      this.columnWidth = containerWidth / this.columnCount;\n\n      // 重新初始化列高度\n      this.columns = new Array(this.columnCount).fill(0);\n      this.reflowImages(); // 重新布局图片\n    },\n    // 重新布局图片\n    async reflowImages() {\n      if (!this.images.length) return;\n\n      // 更新列数\n      const newColumns = new Array(this.columnCount).fill(0);\n\n      // 更新每张图片的位置\n      const updatedImages = this.images.map(image => {\n        const minCol = this.getMinColumnIndex(newColumns);\n        image.column = minCol;\n        image.top = newColumns[minCol];\n        newColumns[minCol] += image.height;\n        return image;\n      });\n      this.columns = newColumns;\n      this.images = updatedImages;\n    },\n    // 获取最矮列的索引\n    getMinColumnIndex(columns) {\n      return columns.indexOf(Math.min(...columns));\n    },\n    observeSecondLastRow() {\n      this.$nextTick(() => {\n        const target = this.getSecondLastRowImage();\n        if (target) {\n          this.observer.observe(target);\n        }\n      });\n    },\n    getSecondLastRowImage() {\n      const imageItems = this.$el.querySelectorAll(\".image-item\");\n      const imagesPerRow = this.columnCount;\n      const startIndex = Math.max(0, imageItems.length - imagesPerRow * 2);\n      const lastSecondRowImages = Array.from(imageItems).slice(startIndex, startIndex + imagesPerRow);\n      return lastSecondRowImages[lastSecondRowImages.length - 1] || null;\n    },\n    // 加载图片\n    async loadImages() {\n      console.log('加载中');\n      if (this.loading) return;\n      this.loading = true;\n      if (this.columnWidth === 0) {\n        this.updateColumnCount();\n      }\n      try {\n        const loadImg = await this.fetchWithAuth(\"/api/manage/check\", {\n          method: 'GET'\n        }).then(response => response.text()).then(result => {\n          if (result == \"true\" || result == \"Not using basic auth.\") {\n            return this.fetchWithAuth(`/api/manage/list?start=${this.images.length}&count=20&random=true`, {\n              method: 'GET'\n            });\n          } else {\n            throw new Error('Unauthorized');\n          }\n        }).then(response => response.json());\n        const newImages = await Promise.all(loadImg.map(async e => {\n          let computedHeight = 0;\n          let url = '/file/' + e.name;\n          if (e.height && e.width) {\n            const aspectRatio = e.height / e.width;\n            computedHeight = this.columnWidth * aspectRatio;\n          } else {\n            let {\n              height,\n              width\n            } = await this.loadImageSize(url);\n            const aspectRatio = height / width;\n            computedHeight = this.columnWidth * aspectRatio;\n          }\n          if (e.metadata?.Channel === 'TelegramNew') {\n            e.channelTag = 'TG';\n          } else if (e.metadata?.Channel === 'CloudflareR2') {\n            e.channelTag = 'R2';\n          } else if (e.metadata?.Channel === 'S3') {\n            e.channelTag = 'S3';\n          } else {\n            e.channelTag = '未知';\n          }\n          return {\n            url: url,\n            height: computedHeight,\n            column: 0,\n            top: 0,\n            channelTag: e.channelTag\n          };\n        }));\n        this.images.push(...newImages);\n        await this.reflowImages(); // 布局重新计算\n      } catch (err) {\n        console.error(err);\n        if (err.message !== 'Unauthorized') {\n          this.$message.error('同步数据时出错，请检查网络连接');\n        }\n      } finally {\n        this.loading = false;\n        this.observeSecondLastRow();\n      }\n    },\n    // 更新图片高度\n    updateImageHeight(image, index) {\n      this.$nextTick(() => {\n        const imgElement = this.$el.querySelectorAll(\".image-item img\")[index];\n        if (imgElement) {\n          image.height = imgElement.clientHeight;\n          if (!this.reflowPending) {\n            this.reflowPending = true;\n            requestAnimationFrame(() => {\n              this.reflowImages();\n              this.reflowPending = false;\n            });\n          }\n        }\n      });\n    },\n    loadImageSize(url) {\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n          resolve({\n            width: img.width,\n            height: img.height\n          });\n        };\n        img.onerror = reject;\n        img.src = url;\n      });\n    },\n    async fetchWithAuth(url, options = {}) {\n      if (this.credentials) {\n        options.headers = {\n          ...options.headers,\n          'Authorization': `Basic ${this.credentials}`\n        };\n        options.credentials = 'include';\n      }\n      const response = await fetch(url, options);\n      if (response.status === 401) {\n        this.$message.error('认证状态错误，请重新登录');\n        this.$router.push('/adminLogin');\n        throw new Error('Unauthorized');\n      }\n      return response;\n    }\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./fallImg.vue?vue&type=template&id=f3ad93f0&scoped=true\"\nimport script from \"./fallImg.vue?vue&type=script&lang=js\"\nexport * from \"./fallImg.vue?vue&type=script&lang=js\"\n\nimport \"./fallImg.vue?vue&type=style&index=0&id=f3ad93f0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f3ad93f0\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","ref","_hoisted_2","_hoisted_3","_hoisted_4","key","render","_ctx","_cache","$props","$setup","$data","$options","images","image","index","style","left","column","columnWidth","top","width","height","src","url","alt","loading","onLoad","$event","updateImageHeight","data","minWidth","columnCount","columns","observer","resizeTimeout","mounted","this","$nextTick","updateColumnCount","window","addEventListener","onResize","loadImages","initObserver","computed","beforeDestroy","disconnect","removeEventListener","methods","clearTimeout","setTimeout","IntersectionObserver","entries","isIntersecting","threshold","observeSecondLastRow","$refs","container","containerWidth","clientWidth","Math","max","floor","Array","fill","reflowImages","length","newColumns","updatedImages","map","minCol","getMinColumnIndex","indexOf","min","target","getSecondLastRowImage","observe","imageItems","$el","querySelectorAll","imagesPerRow","startIndex","lastSecondRowImages","from","slice","console","log","loadImg","fetchWithAuth","method","then","response","text","result","Error","json","newImages","Promise","all","async","computedHeight","e","name","aspectRatio","loadImageSize","metadata","Channel","channelTag","push","err","error","message","$message","imgElement","clientHeight","reflowPending","requestAnimationFrame","resolve","reject","img","Image","onload","onerror","options","credentials","headers","fetch","status","$router","__exports__"],"sourceRoot":""}